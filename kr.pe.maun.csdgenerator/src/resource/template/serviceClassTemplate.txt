package [packagePath];

import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

@Service
public class [capitalizePrefix]Service {

	private static final Logger logger = LogManager.getLogger([capitalizePrefix]Service.class);

	@Resource
	private [capitalizePrefix]Dao [prefix]Dao;

	/**
	 * 총 건수 조회
	 * @Method : select[capitalizePrefix]TotalCnt
	 * @Company : [company]
	 * @Author : [author]
	 * @Date : [date]
	 * @param [searchParamName]
	 * @return long
	 */
	@Transactional(readOnly=true, propagation=Propagation.SUPPORTS)
	public long select[capitalizePrefix]TotalCnt([searchParamType] [searchParamName]) {
		return [prefix]Dao.select[capitalizePrefix]TotalCnt([searchParamName]);
	}

	/**
	 * 목록 조회
	 * @Method : select[prefix]List
	 * @Company : [company]
	 * @Author : [author]
	 * @Date : [date]
	 * @param [searchParamName]
	 * @return
	 */
	@Transactional(readOnly=true, propagation=Propagation.SUPPORTS)
	public List<[returnType]> select[capitalizePrefix]List([searchParamType] [searchParamName]) {
		return [prefix]Dao.select[capitalizePrefix]List([searchParamName]);
	}

	/**
	 * 조회
	 * @Method : select[prefix]
	 * @Company : [company]
	 * @Author : [author]
	 * @Date : [date]
	 * @param [searchParamName]
	 * @return
	 */
	@Transactional(readOnly=true, propagation=Propagation.SUPPORTS)
	public [returnType] select[capitalizePrefix]([searchParamType] [searchParamName]) {
		return [prefix]Dao.select[capitalizePrefix]([searchParamName]);
	}

	/**
	 * 등록
	 * @Method : insert[prefix]
	 * @Company : [company]
	 * @Author : [author]
	 * @Date : [date]
	 * @param [paramName]
	 * @return
	 */
	@Transactional(propagation = Propagation.REQUIRED, isolation=Isolation.DEFAULT)
	public int insert[capitalizePrefix]([paramType] [paramName]) {
		return [prefix]Dao.insert[capitalizePrefix]([paramName]);
	}

	/**
	 * 수정
	 * @Method : update[prefix]
	 * @Company : [company]
	 * @Author : [author]
	 * @Date : [date]
	 * @param [paramName]
	 * @return
	 */
	@Transactional(propagation = Propagation.REQUIRED, isolation=Isolation.DEFAULT)
	public int update[capitalizePrefix]([paramType] [paramName]) {
		return [prefix]Dao.update[capitalizePrefix]([paramName]);
	}

	/**
	 * 삭제
	 * @Method : delete[prefix]
	 * @Company : [company]
	 * @Author : [author]
	 * @Date : [date]
	 * @param [searchParamName]
	 * @return
	 */
	@Transactional(propagation = Propagation.REQUIRED, isolation=Isolation.DEFAULT)
	public int delete[capitalizePrefix]([searchParamType] [searchParamName]) {
		return [prefix]Dao.delete[capitalizePrefix]([searchParamName]);
	}
}
